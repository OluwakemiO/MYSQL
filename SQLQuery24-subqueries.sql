---SUBQUERIES: THESE ARE OFTEN CALLED INNER QUERIES OR NESTED QUERIES. THEY ARE QUERIES WITHIN A QUERIE. 
---THEY OFTEN RETURN DATA THAT WILL BE USED IN THE MAIN QUERIE OR OUTER QUERIE. THEY CAN BE USED ANYWHERE IE IN SELECT,
---FROM,WHERE,INSERT,UODATE AND DELETE STATEMENTS.

---SUBQUERIE IN SELECT

SELECT*
FROM EmployeeSalary
---THE QUERIE BELOW GIVES US THE AVERAGE SALARY FOR ALL THE EMPLOYEES

SELECT AVG(Salary)
FROM EmployeeSalary

---NOW LET'S INSERT THIS SUBQUERIE INTO ANOTHER QUERIE

SELECT EmployeeID,Salary,(SELECT AVG(Salary)FROM EmployeeSalary) AllAvgSalary
FROM EmployeeSalary

---WHEN WE RUN ABOVE QUERIE IT GIVES US THE TABLE WITH COLUMNS EMPLOYEEID, SALARY AND THEN THE AVERAGE SALARY OF ALL
---EMPLOYEES AS REQUESTED BY OUR SUBQUERIE WILL ALSO BE SHOWN UNDER THE ALLAVGSALARY COLUMN

---HOW TO DO IT WITH PARTITION BY

SELECT EmployeeID,Salary,AVG(Salary)OVER () AllAvgSalary
FROM EmployeeSalary

---WHY GROUP BY DOESN'T WORK

SELECT EmployeeID,Salary,AVG(Salary) AllAvgSalary
FROM EmployeeSalary
GROUP BY EmployeeID,Salary
ORDER BY 1,2
---WE WILL NOT BE ABLE TO GET THE AVERAGE SALARY IN THE ALLAVGSALARY COLUMN LIKE WE DID WHEN WE RAN THE OTHER QUERIE.

---SUBQUERIE IN FROM. COMPARE TO A CTE OR TEMP TABLE, THIS QUERIE TENDS TO BE A LOT SLOWER. SO CTE OR TEMP TABLE IS PREFERRED

SELECT *
FROM EmployeeSalary
--- LET'S COPY OUR PREVIOUS PERTITION QUERIE:

SELECT EmployeeID,Salary,AVG(Salary)OVER () AllAvgSalary
FROM EmployeeSalary

---NOW LET'S INSERT THIS QUERIE INTO OUR SELECT STATEMENT
---IT WILL FIRST RUN OUR PARTION SUBQUERIE BEFORE EXECUTING THE MAIN QUERIE TO CREATE OUR ALIAS TABLE WITH COLUMNS EMPLOYEEID AND ALLAVGSALARY. 

SELECT adt.EmployeeID,AllAvgSalary
FROM (SELECT EmployeeID,Salary,AVG(Salary)OVER () AllAvgSalary
FROM EmployeeSalary) ADT


---SUBQUERIE IN WHERE

SELECT EmployeeID,JobTitle,Salary
FROM EmployeeSalary
WHERE EmployeeID IN (SELECT EmployeeID FROM EmployeeDemographics WHERE AGE>30)